{block content}

{if $canViewOrEdit}
{include '../form.latte', form => uzivatelForm}
<script src="{$basePath}/js/isInSubnet.min.js"></script>
<script>
    $( document ).ready(function() {
        $(".ip_adresa.ip").on('input', ipInputCallback);

        $(".ip_adresa.ip").each(ipStartCallback);

        $('[data-toggle="tooltip"]').tooltip();
    });

    function ipInputCallback(e) {
        ipRefresh(e.target);
    }

    function ipStartCallback() {
        ipRefresh(this);
    }

    function ipRefresh(t) {
        var target = $(t);
        var ip = target.val();
        var tbody = t.parentNode.parentNode.parentNode;
        var detailsspan = $(tbody).find(".ip.details");

        var editsubnet = $(tbody).find(".ip.editsubnet");
        var apid = $("#frm-uzivatelForm-Ap_id").val();
        editsubnet.find("a").attr("href", {link Ap:show , id => null} + "/" + apid);

        var errorsspan = $(tbody).find(".ip.errors");

        $('.ip.editsubnet').hide();

        var reqid = detailsspan.data("reqid") + 1;
        detailsspan.data("reqid", reqid);
        $('.ip.waiting').hide();

        if(!ip) {
            errorsspan.hide();
            detailsspan.hide();
            return(false);
        }
        if(!ipValidateSyntax(ip)) {
            errorsspan.show();
            detailsspan.hide();
            errorsspan.text("Neplatná IP adresa");
            return(false);
        }

        if (!ipValidateAllowlist(ip)) {
            errorsspan.show();
            detailsspan.hide();
            errorsspan.text("IP adresa mimo myslitelné rozsahy hkfree.org: " + ipv4AddressWhitelist);
            return(false);
        }

        errorsspan.text('');
        errorsspan.hide();
        $('.ip.waiting').show();

        $.ajax({
            type: "GET",
            url: {link AjaxApi:GetIpDetails , id => null},
            data: { ip: ip, reqid: reqid, apid: apid },
            success: ipAjaxCallback.bind(tbody),
            dataType: "json"
        });
    }

    function ipAjaxCallback(d) {
        var detailsspan = $(this).find(".ip.details");
        var errorsspan = $(this).find(".ip.errors");

        if(detailsspan.data("reqid") != d.reqid){
            // data jdouci moc pozde zahodime
            return(false);
        }

        $('.ip.waiting').hide();

        if(d.error) {
            errorsspan.text(d.error);

            errorsspan.show();
            detailsspan.hide();
        } else {
            detailsspan.find(".subnet").text(d.subnet);
            detailsspan.find(".gateway").text(d.gateway);
            detailsspan.find(".mask").text(d.mask);
            detailsspan.find(".subnetlink").attr('href', d.subnetLink);

            errorsspan.hide();
            detailsspan.show();
        }
        $('.ip.editsubnet').show();
    }

    function ipValidateSyntax(ip)
    {
        var rx = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
        return(rx.test(ip));
    }

    const ipv4AddressWhitelist = [ {foreach $ipv4AddressWhitelist as $ipSubnet} {$ipSubnet} {sep}, {/sep} {/foreach} ];

    function ipValidateAllowlist(ip)
    {
        if (ipv4AddressWhitelist.length == 0) return true;
        return isInSubnet.isInSubnet(ip, ipv4AddressWhitelist);
    }
</script>

{else}
<p>Na tuto operaci nemáte oprávnění!</p>
{/if}

{/block}
